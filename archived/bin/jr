#!/usr/bin/env python3
'''
whatis: Script to compile and run a single Java source file
'''
import argparse
import glob
import pathlib
import os
import subprocess
import sys


SUCCESS = 0


def find_lib_dir():
    """
    Traverses up from the current directory to find the lib dir
    """
    current_dir = pathlib.Path.cwd()
    root = pathlib.Path('/')

    while current_dir != root:
        lib_dir = current_dir / 'lib'
        if lib_dir.exists() and lib_dir.is_dir():
            return lib_dir
        current_dir = current_dir.parent
    return pathlib.Path('.')


if __name__ == '__main__':
    lib_dir = find_lib_dir()

    # Fix up the CLASSPATH
    class_path = os.getenv('CLASSPATH')
    if class_path is None:
        class_path = []
    else:
        class_path = cp.split(os.pathsep)
    class_path.insert(0, '.')  

    class_path += [str(x) for x in lib_dir.glob('*')]
    class_path = os.pathsep.join(class_path)
    os.environ['CLASSPATH'] = class_path

    # Get the file name
    parser = argparse.ArgumentParser()
    parser.add_argument('source')
    options, run_arguments = parser.parse_known_args()

    # Compile and run
    return_code = subprocess.call(['javac', options.source])
    if return_code != 0:
        raise SystemExit(return_code)
    
    class_name, _ = os.path.splitext(options.source)
    return_code = subprocess.call(['java', class_name] + run_arguments)
    raise SystemExit(return_code)

