#!/usr/bin/env python3
"""
cargo-version  # Show version
cargo-version
"""

import argparse
import fileinput
import logging
import os
import shlex

logging.basicConfig(level=os.getenv("LOGLEVEL", "WARNING"))

def show_version(filename: str):
    with open(filename, "r", encoding="utf-8") as stream:
        in_package = False
        for line in stream:
            if line.startswith("[package]"):
                in_package = True
            elif line.startswith("version ="):
                version = shlex.split(line)[-1]
                print(version)
                break

def update_cargo_toml(filename: str, command: str):
    in_package = False
    for line in fileinput.input(filename, inplace=True):
        logging.debug("line=%r", line)
        line = line.rstrip()
        if line.startswith("[package]"):
            in_package = True
        elif line.startswith("version = ") and in_package:
            line = update_version(line, command)
        print(line)

def update_version(line: str, command: str):
    version_str = shlex.split(line)[-1]
    major, minor, build = [int(x) for x in version_str.split(".")]
    logging.debug("update version: version=%r", version_str)
    if command == "inc-build" or command == "b":
        build += 1
    elif command == "inc-minor" or command == "m":
        build = 0
        minor += 1
    elif command == "inc-major" or command == "M":
        build = 0
        minor = 0
        major += 1
    updated_version = f"{major}.{minor}.{build}"
    logging.debug("update version: updated version=%r", updated_version)
    return f'version = "{updated_version}"'


def main():
    """Entry"""
    parser = argparse.ArgumentParser()
    sub_parser = parser.add_subparsers(dest="command")
    parser.add_argument("file", help="Path to Cargo.toml")
    sub_parser.add_parser(
        "inc-major",
        aliases=["M"],
        help="Increase major  by one, reset minor and build, e.g. 1.3.4 -> 2.0.0",
    )
    sub_parser.add_parser(
        "inc-minor",
        aliases=["m"],
        help="Increase minor by one, reset build, e.g. 1.3.4 -> 1.4.0",
    )
    sub_parser.add_parser(
        "inc-build", aliases=["b"], help="Increase build by one, e.g. 1.3.4 -> 1.3.5"
    )
    sub_parser.add_parser("show", help="Show the version")
    options = parser.parse_args()
    logging.debug("options=%r", options)

    if options.command == "show": 
        show_version(options.file)
    elif options.command in {"inc-major", "inc-minor", "inc-build", "M", "m", "b"}:
        update_cargo_toml(options.file, options.command)


if __name__ == "__main__":
    main()
